/**
 * Generated by orval v6.16.0 üç∫
 * Do not edit manually.
 * Mobilityways API
 * OpenAPI spec version: 2.0.0
 */
import { useMutation } from '@tanstack/vue-query';
import type { UseMutationOptions, MutationFunction } from '@tanstack/vue-query';
import type { MaybeRef } from '@tanstack/vue-query/build/lib/types';
import type {
  AbstractModuleApiResponseSupportRequestSendRequestSupportRequestSendResponseSupportRequestSendResponseFeqxhy,
  SupportRequestSendRequestFnvyi
} from '.././model';
import { customInstance } from '../../../axiosInstance';

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export const postV2SupportRequest = (
  supportRequestSendRequestFnvyi: MaybeRef<SupportRequestSendRequestFnvyi>
) => {
  return customInstance<AbstractModuleApiResponseSupportRequestSendRequestSupportRequestSendResponseSupportRequestSendResponseFeqxhy>(
    {
      url: `/v2/support-request`,
      method: 'post',
      headers: { 'Content-Type': 'application/json' },
      data: supportRequestSendRequestFnvyi
    }
  );
};

export const getPostV2SupportRequestMutationOptions = <
  TError = unknown,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postV2SupportRequest>>,
    TError,
    { data: SupportRequestSendRequestFnvyi },
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postV2SupportRequest>>,
  TError,
  { data: SupportRequestSendRequestFnvyi },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postV2SupportRequest>>,
    { data: SupportRequestSendRequestFnvyi }
  > = (props) => {
    const { data } = props ?? {};

    return postV2SupportRequest(data);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostV2SupportRequestMutationResult = NonNullable<
  Awaited<ReturnType<typeof postV2SupportRequest>>
>;
export type PostV2SupportRequestMutationBody = SupportRequestSendRequestFnvyi;
export type PostV2SupportRequestMutationError = unknown;

export const usePostV2SupportRequest = <TError = unknown, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postV2SupportRequest>>,
    TError,
    { data: SupportRequestSendRequestFnvyi },
    TContext
  >;
}) => {
  const mutationOptions = getPostV2SupportRequestMutationOptions(options);

  return useMutation(mutationOptions);
};
