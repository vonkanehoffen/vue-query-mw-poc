/**
 * Generated by orval v6.16.0 üç∫
 * Do not edit manually.
 * Mobilityways API
 * OpenAPI spec version: 2.0.0
 */
import { useQuery } from '@tanstack/vue-query';
import type {
  UseQueryOptions,
  QueryFunction,
  QueryKey,
  UseQueryReturnType
} from '@tanstack/vue-query';
import { unref } from 'vue';
import type { MaybeRef } from '@tanstack/vue-query/build/lib/types';
import type { AbstractModuleApiResponseOnboardingChecklistRequestOnboardingChecklistResponseOnboardingChecklistResponseYyki } from '.././model';
import { customInstance } from '../../../axiosInstance';

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export const getV2OnboardingChecklistCommunityId = (
  communityId: MaybeRef<string>,
  signal?: AbortSignal
) => {
  return customInstance<AbstractModuleApiResponseOnboardingChecklistRequestOnboardingChecklistResponseOnboardingChecklistResponseYyki>(
    { url: `/v2/onboarding-checklist/${unref(communityId)}`, method: 'get', signal }
  );
};

export const getGetV2OnboardingChecklistCommunityIdQueryKey = (communityId: MaybeRef<string>) =>
  ['v2', 'onboarding-checklist', communityId] as const;

export const getGetV2OnboardingChecklistCommunityIdQueryOptions = <
  TData = Awaited<ReturnType<typeof getV2OnboardingChecklistCommunityId>>,
  TError = unknown
>(
  communityId: MaybeRef<string>,
  options?: {
    query?: UseQueryOptions<
      Awaited<ReturnType<typeof getV2OnboardingChecklistCommunityId>>,
      TError,
      TData
    >;
  }
): UseQueryOptions<
  Awaited<ReturnType<typeof getV2OnboardingChecklistCommunityId>>,
  TError,
  TData
> => {
  const { query: queryOptions } = options ?? {};

  const queryKey = getGetV2OnboardingChecklistCommunityIdQueryKey(communityId);

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getV2OnboardingChecklistCommunityId>>> = ({
    signal
  }) => getV2OnboardingChecklistCommunityId(communityId, signal);

  return { queryKey, queryFn, enabled: !!communityId, ...queryOptions };
};

export type GetV2OnboardingChecklistCommunityIdQueryResult = NonNullable<
  Awaited<ReturnType<typeof getV2OnboardingChecklistCommunityId>>
>;
export type GetV2OnboardingChecklistCommunityIdQueryError = unknown;

export const useGetV2OnboardingChecklistCommunityId = <
  TData = Awaited<ReturnType<typeof getV2OnboardingChecklistCommunityId>>,
  TError = unknown
>(
  communityId: MaybeRef<string>,
  options?: {
    query?: UseQueryOptions<
      Awaited<ReturnType<typeof getV2OnboardingChecklistCommunityId>>,
      TError,
      TData
    >;
  }
): UseQueryReturnType<TData, TError> & { queryKey: QueryKey } => {
  const queryOptions = getGetV2OnboardingChecklistCommunityIdQueryOptions(communityId, options);

  const query = useQuery(queryOptions) as UseQueryReturnType<TData, TError> & {
    queryKey: QueryKey;
  };

  query.queryKey = queryOptions.queryKey as QueryKey;

  return query;
};
