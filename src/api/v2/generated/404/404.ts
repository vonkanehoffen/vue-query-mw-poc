/**
 * Generated by orval v6.16.0 üç∫
 * Do not edit manually.
 * Mobilityways API
 * OpenAPI spec version: 2.0.0
 */
import { useMutation } from '@tanstack/vue-query';
import type { UseMutationOptions, MutationFunction } from '@tanstack/vue-query';
import type { MaybeRef } from '@tanstack/vue-query/build/lib/types';
import type {
  AbstractModuleApiResponseLogRequestLogResponseLogResponseMrdvma,
  LogRequestGvmhyq
} from '.././model';
import { customInstance } from '../../../axiosInstance';

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

/**
 * Internal use only. Inserts log entry or a 404 request.
 */
export const postV2404 = (logRequestGvmhyq: MaybeRef<LogRequestGvmhyq>) => {
  return customInstance<AbstractModuleApiResponseLogRequestLogResponseLogResponseMrdvma>({
    url: `/v2/404`,
    method: 'post',
    headers: { 'Content-Type': 'application/json' },
    data: logRequestGvmhyq
  });
};

export const getPostV2404MutationOptions = <TError = unknown, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postV2404>>,
    TError,
    { data: LogRequestGvmhyq },
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postV2404>>,
  TError,
  { data: LogRequestGvmhyq },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postV2404>>,
    { data: LogRequestGvmhyq }
  > = (props) => {
    const { data } = props ?? {};

    return postV2404(data);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostV2404MutationResult = NonNullable<Awaited<ReturnType<typeof postV2404>>>;
export type PostV2404MutationBody = LogRequestGvmhyq;
export type PostV2404MutationError = unknown;

export const usePostV2404 = <TError = unknown, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postV2404>>,
    TError,
    { data: LogRequestGvmhyq },
    TContext
  >;
}) => {
  const mutationOptions = getPostV2404MutationOptions(options);

  return useMutation(mutationOptions);
};
