/**
 * Generated by orval v6.16.0 üç∫
 * Do not edit manually.
 * Mobilityways API
 * OpenAPI spec version: 2.0.0
 */
import { useMutation } from '@tanstack/vue-query'
import type { UseMutationOptions, MutationFunction } from '@tanstack/vue-query'
import { unref } from 'vue'
import type { MaybeRef } from '@tanstack/vue-query/build/lib/types'
import type { AbstractModuleApiResponseVerifyMobileNumberRequestVerifyMobileNumberResponseVerifyMobileNumberResponseUakqi } from '.././model'
import { customInstance } from '../../../axiosInstance'

type AwaitedInput<T> = PromiseLike<T> | T

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never

export const postV2LiftshareMobileVerifyToken = (token: MaybeRef<string>) => {
  return customInstance<AbstractModuleApiResponseVerifyMobileNumberRequestVerifyMobileNumberResponseVerifyMobileNumberResponseUakqi>(
    { url: `/v2/liftshare/mobile/verify/${unref(token)}`, method: 'post' }
  )
}

export const getPostV2LiftshareMobileVerifyTokenMutationOptions = <
  TError = unknown,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postV2LiftshareMobileVerifyToken>>,
    TError,
    { token: string },
    TContext
  >
}): UseMutationOptions<
  Awaited<ReturnType<typeof postV2LiftshareMobileVerifyToken>>,
  TError,
  { token: string },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {}

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postV2LiftshareMobileVerifyToken>>,
    { token: string }
  > = (props) => {
    const { token } = props ?? {}

    return postV2LiftshareMobileVerifyToken(token)
  }

  return { mutationFn, ...mutationOptions }
}

export type PostV2LiftshareMobileVerifyTokenMutationResult = NonNullable<
  Awaited<ReturnType<typeof postV2LiftshareMobileVerifyToken>>
>

export type PostV2LiftshareMobileVerifyTokenMutationError = unknown

export const usePostV2LiftshareMobileVerifyToken = <
  TError = unknown,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postV2LiftshareMobileVerifyToken>>,
    TError,
    { token: string },
    TContext
  >
}) => {
  const mutationOptions = getPostV2LiftshareMobileVerifyTokenMutationOptions(options)

  return useMutation(mutationOptions)
}
