/**
 * Generated by orval v6.16.0 üç∫
 * Do not edit manually.
 * Mobilityways API
 * OpenAPI spec version: 2.0.0
 */
import { useMutation } from '@tanstack/vue-query'
import type { UseMutationOptions, MutationFunction } from '@tanstack/vue-query'
import type { MaybeRef } from '@tanstack/vue-query/build/lib/types'
import type {
  AbstractModuleApiResponseDashboardSettingsUpdateRequestDashboardSettingsUpdateResponseDashboardSettingsUpdateResponseUlsbya,
  DashboardSettingsUpdateBaseRequestDgtyi
} from '.././model'
import { customInstance } from '../../../axiosInstance'

type AwaitedInput<T> = PromiseLike<T> | T

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never

export const putV2Settings = (
  dashboardSettingsUpdateBaseRequestDgtyi: MaybeRef<DashboardSettingsUpdateBaseRequestDgtyi>
) => {
  return customInstance<AbstractModuleApiResponseDashboardSettingsUpdateRequestDashboardSettingsUpdateResponseDashboardSettingsUpdateResponseUlsbya>(
    {
      url: `/v2/settings`,
      method: 'put',
      headers: { 'Content-Type': 'application/json' },
      data: dashboardSettingsUpdateBaseRequestDgtyi
    }
  )
}

export const getPutV2SettingsMutationOptions = <TError = unknown, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putV2Settings>>,
    TError,
    { data: DashboardSettingsUpdateBaseRequestDgtyi },
    TContext
  >
}): UseMutationOptions<
  Awaited<ReturnType<typeof putV2Settings>>,
  TError,
  { data: DashboardSettingsUpdateBaseRequestDgtyi },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {}

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof putV2Settings>>,
    { data: DashboardSettingsUpdateBaseRequestDgtyi }
  > = (props) => {
    const { data } = props ?? {}

    return putV2Settings(data)
  }

  return { mutationFn, ...mutationOptions }
}

export type PutV2SettingsMutationResult = NonNullable<Awaited<ReturnType<typeof putV2Settings>>>
export type PutV2SettingsMutationBody = DashboardSettingsUpdateBaseRequestDgtyi
export type PutV2SettingsMutationError = unknown

export const usePutV2Settings = <TError = unknown, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof putV2Settings>>,
    TError,
    { data: DashboardSettingsUpdateBaseRequestDgtyi },
    TContext
  >
}) => {
  const mutationOptions = getPutV2SettingsMutationOptions(options)

  return useMutation(mutationOptions)
}
